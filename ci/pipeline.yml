---
resource_types:
- name: kubernetes
  type: docker-image
  source:
    repository: zlabjp/kubernetes-resource
    tag: "1.15"

resources:
  - name: git-source
    type: git
    icon: github-circle
    source:
      uri: https://github.com/funkypenguin/phippyandfriends.git

  - name: kube-cluster
    type: kubernetes
    icon: kubernetes
    source:
      server: ((kubernetes-url))
      namespace: dev
      token: ((kubernetes-token))
      certificate_authority: ((kubernetes-cert))

  - name: harbour
    type: registry-image
    icon: pier-crane
    source:
      username: ((registry-username))
      password: ((registry-password))
      debug: true
      repository: ((registry-url))/((component))


jobs:
  - name: job
    public: true
    plan:
      - get: git-source
        trigger: true

      # This generic task takes a param "component", and builds the dockerfile found in the <git-source>/<component> directory.
      - task: build-image
        file: git-source/ci/tasks/build-with-kaniko.yml
        vars: { component: ((component)) }

      # This task uploads the image generated above into the registry
      - put: harbour
        params:
          image: image/image.tar

      # This task runs "helm lint" against the helm chart found in <git-source>/<component>/charts/<component> directory.
      - task: helm lint chart
        file: git-source/ci/tasks/helm-lint.yml
        vars: { component: ((component)) }


      # This task uses helm to generate kubernetes manifests from the supplied chart and values
      - task: create manifest from chart
        config:
          inputs: 
            - name: git-source
          outputs:
            - name: helm-generated-manifest
          platform: linux
          image_resource:
            type: docker-image
            source: { repository: dtzar/helm-kubectl }
          run: 
            path: /bin/ash 
            args:
              - -c
              - |
                helm template \
                  --set buildID=bananapants \
                  --set image.repository=(registry-url))/((component)) \
                  --set image.tag=latest \
                  --output-dir=helm-generated-manifest \
                  --git-source/((component))/charts/((component))


      - task: kubeval manifest
        config:
          inputs: 
            - name: helm-generated-manifest
          platform: linux
          image_resource:
            type: docker-image
            source: { repository: garethr/kubeval }
          run: 
            path: kubeval 
            args:
              - -d
              - helm-generated-manifest


      - put: kube-cluster 
        params:
          kubectl: apply -f helm-generated-manifest/((component))/templates
          #wait_until_ready_selector: app=myapp


